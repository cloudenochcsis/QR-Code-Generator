# AWS Infrastructure Outputs

output "vpc_id" {
  description = "ID of the VPC"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "private_subnet_ids" {
  description = "IDs of the private subnets"
  value       = module.vpc.private_subnet_ids
}

output "public_subnet_ids" {
  description = "IDs of the public subnets"
  value       = module.vpc.public_subnet_ids
}

output "eks_cluster_id" {
  description = "EKS cluster ID"
  value       = module.eks.cluster_id
}

output "eks_cluster_arn" {
  description = "EKS cluster ARN"
  value       = module.eks.cluster_arn
}

output "eks_cluster_endpoint" {
  description = "EKS cluster endpoint"
  value       = module.eks.cluster_endpoint
}

output "eks_cluster_version" {
  description = "EKS cluster Kubernetes version"
  value       = module.eks.cluster_version
}

output "eks_cluster_security_group_id" {
  description = "Security group ID attached to the EKS cluster"
  value       = module.eks.cluster_security_group_id
}

output "eks_node_groups" {
  description = "EKS node groups"
  value       = module.eks.node_groups
}

output "s3_bucket_id" {
  description = "S3 bucket ID"
  value       = module.s3.bucket_id
}

output "s3_bucket_arn" {
  description = "S3 bucket ARN"
  value       = module.s3.bucket_arn
}

output "s3_bucket_domain_name" {
  description = "S3 bucket domain name"
  value       = module.s3.bucket_domain_name
}

output "rds_endpoint" {
  description = "RDS instance endpoint"
  value       = var.enable_rds ? module.rds[0].endpoint : null
}

output "rds_port" {
  description = "RDS instance port"
  value       = var.enable_rds ? module.rds[0].port : null
}

output "redis_endpoint" {
  description = "Redis cluster endpoint"
  value       = var.enable_redis ? module.redis[0].endpoint : null
}

output "redis_port" {
  description = "Redis cluster port"
  value       = var.enable_redis ? module.redis[0].port : null
}

output "iam_role_arn" {
  description = "IAM role ARN for EKS service account"
  value       = module.iam.service_account_role_arn
}

output "acm_certificate_arn" {
  description = "ACM certificate ARN"
  value       = aws_acm_certificate.main.arn
}

output "route53_zone_id" {
  description = "Route53 hosted zone ID"
  value       = var.manage_dns ? aws_route53_zone.main[0].zone_id : null
}

output "waf_web_acl_arn" {
  description = "WAF Web ACL ARN"
  value       = aws_wafv2_web_acl.main.arn
}

output "alb_security_group_id" {
  description = "ALB security group ID"
  value       = aws_security_group.alb.id
}

output "cloudwatch_log_group_names" {
  description = "CloudWatch log group names"
  value = {
    eks_cluster   = aws_cloudwatch_log_group.eks_cluster.name
    application   = aws_cloudwatch_log_group.application.name
  }
}

# Kubernetes configuration
output "kubeconfig" {
  description = "kubectl config as generated by the module"
  value = {
    cluster_name     = module.eks.cluster_id
    endpoint         = module.eks.cluster_endpoint
    ca_certificate   = module.eks.cluster_certificate_authority_data
    region          = var.aws_region
  }
  sensitive = true
}

# Connection strings and URLs
output "application_urls" {
  description = "Application URLs"
  value = {
    frontend_url = "https://${var.domain_name}"
    api_url      = "https://api.${var.domain_name}"
    grafana_url  = "https://grafana.${var.domain_name}"
  }
}

# Resource counts and costs
output "resource_summary" {
  description = "Summary of created resources"
  value = {
    vpc_subnets       = length(module.vpc.private_subnet_ids) + length(module.vpc.public_subnet_ids)
    eks_node_groups   = length(var.eks_node_groups)
    rds_enabled       = var.enable_rds
    redis_enabled     = var.enable_redis
    monitoring_enabled = var.enable_monitoring
  }
}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qr-generator-ingress
  namespace: qr-generator
  labels:
    app: qr-generator
  annotations:
    # Azure Application Gateway Ingress Controller annotations
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/backend-protocol: http
    appgw.ingress.kubernetes.io/ssl-redirect: "true"

    # SSL/TLS configuration
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: qr-generator-ssl-cert

    # Health check configuration
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200-399"
    appgw.ingress.kubernetes.io/health-probe-path: /health
    appgw.ingress.kubernetes.io/health-probe-interval: "30"
    appgw.ingress.kubernetes.io/health-probe-timeout: "5"
    appgw.ingress.kubernetes.io/health-probe-unhealthy-threshold: "3"

    # Security and performance
    appgw.ingress.kubernetes.io/request-timeout: "30"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"

    # WAF Policy
    appgw.ingress.kubernetes.io/waf-policy-for-path: "/subscriptions/SUBSCRIPTION-ID/resourceGroups/RG-NAME/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/qr-generator-waf"
    
spec:
  tls:
  - hosts:
    - qr-generator.example.com
    - api.qr-generator.example.com
    secretName: qr-generator-tls
  rules:
  # Frontend routes
  - host: qr-generator.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qr-generator-frontend
            port:
              number: 3000
  
  # Backend API routes
  - host: api.qr-generator.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qr-generator-backend
            port:
              number: 8000

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: qr-generator-network-policy
  namespace: qr-generator
spec:
  podSelector:
    matchLabels:
      app: qr-generator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ALB
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 8000
  # Allow inter-service communication
  - from:
    - podSelector:
        matchLabels:
          app: qr-generator
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 8000
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000  # metrics endpoint
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow HTTPS outbound (for AWS/Azure APIs)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow inter-service communication
  - to:
    - podSelector:
        matchLabels:
          app: qr-generator
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 8000

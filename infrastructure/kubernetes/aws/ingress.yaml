apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qr-generator-ingress
  namespace: qr-generator
  labels:
    app: qr-generator
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: qr-generator-alb
    
    # SSL/TLS configuration
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:ACCOUNT-ID:certificate/CERT-ID
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # Security and performance
    alb.ingress.kubernetes.io/security-groups: sg-xxxxxxxxx
    alb.ingress.kubernetes.io/subnets: subnet-xxxxxxxx,subnet-yyyyyyyy
    alb.ingress.kubernetes.io/tags: Environment=production,Project=qr-generator
    
    # Rate limiting and WAF
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:us-east-1:ACCOUNT-ID:regional/webacl/qr-generator-waf/xxxxx
    
spec:
  tls:
  - hosts:
    - qr-generator.example.com
    - api.qr-generator.example.com
    secretName: qr-generator-tls
  rules:
  # Frontend routes
  - host: qr-generator.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qr-generator-frontend
            port:
              number: 3000
  
  # Backend API routes
  - host: api.qr-generator.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qr-generator-backend
            port:
              number: 8000

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: qr-generator-network-policy
  namespace: qr-generator
spec:
  podSelector:
    matchLabels:
      app: qr-generator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ALB
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 8000
  # Allow inter-service communication
  - from:
    - podSelector:
        matchLabels:
          app: qr-generator
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 8000
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000  # metrics endpoint
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow HTTPS outbound (for AWS/Azure APIs)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow inter-service communication
  - to:
    - podSelector:
        matchLabels:
          app: qr-generator
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 8000

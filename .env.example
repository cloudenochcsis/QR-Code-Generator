# Multi-Cloud QR Code Generator - Environment Configuration Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# AWS Configuration
# =============================================================================
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_REGION=us-east-1
AWS_S3_BUCKET=qr-codes-bucket-prod

# =============================================================================
# Azure Configuration
# =============================================================================
AZURE_STORAGE_ACCOUNT=your_storage_account_name
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=...
AZURE_CONTAINER=qr-codes

# =============================================================================
# Application Configuration
# =============================================================================
# Backend API URL (used by frontend)
NEXT_PUBLIC_API_URL=http://localhost:8000

# Application metadata
NEXT_PUBLIC_APP_NAME=QR Code Generator
NEXT_PUBLIC_APP_VERSION=1.0.0

# Environment (dev, staging, prod)
ENVIRONMENT=development

# =============================================================================
# Database Configuration (Optional)
# =============================================================================
# PostgreSQL connection string (if using database for metadata)
DATABASE_URL=postgresql://user:password@localhost:5432/qrgenerator

# =============================================================================
# Redis Configuration (Optional)
# =============================================================================
# Redis connection string (if using Redis for caching)
REDIS_URL=redis://localhost:6379

# =============================================================================
# Security Configuration
# =============================================================================
# Secret key for JWT tokens (generate a secure random string)
SECRET_KEY=your_super_secret_key_here

# CORS origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,https://your-domain.com

# =============================================================================
# Monitoring Configuration
# =============================================================================
# Prometheus metrics endpoint
PROMETHEUS_PORT=9090

# Grafana configuration
GRAFANA_PORT=3001
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin

# =============================================================================
# Logging Configuration
# =============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=json

# =============================================================================
# Performance Configuration
# =============================================================================
# Maximum number of QR codes in a batch request
MAX_QR_BATCH_SIZE=100

# QR code cache TTL in seconds
QR_CACHE_TTL=3600

# Maximum file upload size in MB
MAX_UPLOAD_SIZE_MB=10

# =============================================================================
# Docker Configuration
# =============================================================================
# Docker registry for custom images
DOCKER_REGISTRY=ghcr.io/your-username

# Build arguments
BUILD_DATE=2024-01-01T00:00:00Z
VERSION=1.0.0
VCS_REF=main

# =============================================================================
# Kubernetes Configuration
# =============================================================================
# Kubernetes namespace
K8S_NAMESPACE=qr-generator

# Resource limits
BACKEND_CPU_LIMIT=500m
BACKEND_MEMORY_LIMIT=512Mi
FRONTEND_CPU_LIMIT=200m
FRONTEND_MEMORY_LIMIT=256Mi

# =============================================================================
# Domain Configuration
# =============================================================================
# Your domain name
DOMAIN_NAME=qr-generator.example.com

# SSL certificate ARN (AWS) or certificate name (Azure)
SSL_CERTIFICATE_ARN=arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012

# =============================================================================
# Backup Configuration
# =============================================================================
# Backup retention period in days
BACKUP_RETENTION_DAYS=30

# Cross-region backup enabled
CROSS_REGION_BACKUP=true

# =============================================================================
# Cost Optimization
# =============================================================================
# Enable spot instances for non-critical workloads
ENABLE_SPOT_INSTANCES=true

# Auto-scaling configuration
MIN_REPLICAS=2
MAX_REPLICAS=10

# =============================================================================
# Development Configuration
# =============================================================================
# Enable debug mode (development only)
DEBUG=false

# Enable hot reload (development only)
HOT_RELOAD=true

# Skip SSL verification (development only)
SKIP_SSL_VERIFY=false

# =============================================================================
# Testing Configuration
# =============================================================================
# Test database URL
TEST_DATABASE_URL=postgresql://test:test@localhost:5432/qrgenerator_test

# Test Redis URL
TEST_REDIS_URL=redis://localhost:6379/1

# Enable test mode
TEST_MODE=false

# =============================================================================
# CI/CD Configuration
# =============================================================================
# GitHub repository
GITHUB_REPOSITORY=your-username/multi-cloud-qr-generator

# Container registry
CONTAINER_REGISTRY=ghcr.io

# Deployment environment
DEPLOYMENT_ENVIRONMENT=production

# =============================================================================
# Feature Flags
# =============================================================================
# Enable multi-cloud storage
ENABLE_MULTI_CLOUD_STORAGE=true

# Enable monitoring
ENABLE_MONITORING=true

# Enable caching
ENABLE_CACHING=true

# Enable rate limiting
ENABLE_RATE_LIMITING=true

# =============================================================================
# Third-party Integrations
# =============================================================================
# Slack webhook for notifications (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...

# Email configuration for alerts (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# =============================================================================
# Notes
# =============================================================================
# 1. Never commit the actual .env file to version control
# 2. Use strong, unique passwords and keys
# 3. Rotate credentials regularly
# 4. Use cloud-native secret management in production
# 5. Validate all environment variables on application startup
